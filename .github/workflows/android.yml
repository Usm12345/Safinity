name: Build Safinity APK with UV

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - uses: actions/checkout@v4

      # 1. Install UV (replaces pip where possible)
      - name: 🚀 Install UV
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH

      # 2. System dependencies (optimized)
      - name: 🧰 Install System Tools
        run: |
          sudo apt update && sudo apt install -y \
            openjdk-17-jdk git autoconf libtool pkg-config \
            zlib1g-dev libncurses5-dev libffi-dev libssl-dev

      # 3. Python setup with UV
      - name: 🐍 Set up Python
        run: |
          uv venv .venv --python=3.9
          source .venv/bin/activate
          uv pip install --system buildozer==1.5.0 cython==0.29.36 setuptools

      # 4. Initialize Buildozer
      - name: 🛠️ Initialize Buildozer
        run: |
          if [ ! -f buildozer.spec ]; then
            buildozer init
          fi
          # Ensure critical packages are available
          uv pip install --system appdirs colorama>=0.3.3 jinja2 "sh>=1.10,<2.0" build toml packaging

      # 5. Build with UV-enhanced pip
      - name: 📦 Build APK (UV-optimized)
        run: |
          buildozer android clean
          buildozer -v android debug --cmd pip "uv pip install --system"

      # 6. Artifacts and testing
      - name: 📤 Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: Safinity-APK
          path: bin/*.apk

      - name: 🤖 Test on Emulator
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 30
          script: |
            adb install bin/*.apk
            adb shell am start -n org.safinity.app/org.kivy.android.PythonActivity
            sleep 10
            adb logcat -d | grep -iE "kivy|python"
